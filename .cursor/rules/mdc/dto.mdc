---
description: 
globs: 
alwaysApply: true
---
# Data Transfer Objects (DTOs)

## Info

- **Autor**: Cursor
- **Versión**: 1.0
- **Categoría**: Implementación
- **Tags**: #DDD #Aplicación #DTO #C#

## Aplicación Automática

Este documento se aplica automáticamente en los siguientes casos:
- Nombre de archivo contiene: `Dto`, `DTO`, `.dto.`
- Ruta de archivo contiene: `/DTO/`, `/Dto/`, `/dto/` 
- Extensión de archivo: `.cs`
- Se está editando una clase con patrón `*Dto`
- Cuando solicites ayuda usando `// crear dto` o `// dto`

## Descripción

Los DTOs son objetos para transferencia de datos entre capas. Simplifican la comunicación entre la capa de Aplicación y la capa de Presentación (API/UI).

## Tipos de DTOs

1. **CreateDto**: Para operaciones de creación
2. **UpdateDto**: Para operaciones de actualización
3. **ReadDto**: Para lectura detallada de una entidad
4. **QueryDto**: Para listados y búsquedas (más ligero)

## Reglas de Implementación

- ✅ Agrupar por operación (Create, Update, Read, Query)
- ✅ Usar anotaciones de validación cuando aplique
- ✅ Incluir solo las propiedades necesarias para cada operación
- ✅ Incluir propiedades de navegación cuando sea necesario
- ❌ No incluir lógica de negocio
- ❌ No heredar entre DTOs
- ❌ No usar entidades de dominio como propiedades

## Ejemplos

### DTOs CRUD para Producto

```csharp
namespace TuProyecto.Application.DTO.Products;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

public class ProductCreateDto
{
    public Guid? Id { get; set; }
    
    [Required]
    [StringLength(100, MinimumLength = 3)]
    public string Name { get; set; }
    
    [Required]
    [Range(0.01, 99999.99)]
    public decimal Price { get; set; }
    
    public Guid? CategoryId { get; set; }
}

public class ProductUpdateDto
{
    [Required]
    [StringLength(100, MinimumLength = 3)]
    public string Name { get; set; }
    
    [Required]
    [Range(0.01, 99999.99)]
    public decimal Price { get; set; }
}

public class ProductReadDto
{
    public Guid Id { get; set; }
    public string Name { get; set; }
    public decimal Price { get; set; }
    public string Status { get; set; }
    public DateTime CreationDate { get; set; }
    public DateTime EditDate { get; set; }
    
    // Propiedades de navegación
    public CategoryMinDto Category { get; set; }
}

public class ProductQueryDto
{
    public Guid Id { get; set; }
    public string Name { get; set; }
    public decimal Price { get; set; }
    public string Status { get; set; }
}

// DTO auxiliar para relaciones
public class CategoryMinDto
{
    public Guid Id { get; set; }
    public string Name { get; set; }
}
```

## Estructura del Archivo

```
src/
  Application/
    TuProyecto.Application/
      DTO/
        [Modulo]/
          [Entidad]CreateDto.cs
          [Entidad]UpdateDto.cs
          [Entidad]ReadDto.cs
          [Entidad]QueryDto.cs
```

## Referencias

- [Ejemplo Completo de DTOs](mdc:src/DDD_Ejemplos_Codigo/5_Application_DTO.cs)
- [Documentación sobre Capa de Aplicación](mdc:src/DDD_Estructura_Proyecto.txt)



