{
  "name": "entity_mapping",
  "description": "Reglas para mapeos de Entity Framework en Data Layer",
  "patterns": [
    ".*Mapping\\.cs$",
    ".*/Data/.*/Mappings/.+\\.cs$",
    ".*EntityTypeConfiguration.*\\.cs$"
  ],
  "keywords": [
    "mapeo",
    "entity mapping",
    "configuraci\u00f3n entidad"
  ],
  "documentation": "../global/ddd_estructura.mdc",
  "example_file": "../DDD_Ejemplos_Codigo/4_Data_Entity_Mapping.cs",
  "templates": [
    {
      "name": "Entity Framework Mapping",
      "description": "Plantilla para configuraci\u00f3n de mapeo de entidad con Entity Framework Core",
      "code": "namespace TuProyecto.Data.Mappings.<Modulo>;\n\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Metadata.Builders;\nusing TuProyecto.Domain.Models.<Modulo>;\n\npublic class <Entidad>Mapping : IEntityTypeConfiguration<<Entidad>>\n{\n    public void Configure(EntityTypeBuilder<<Entidad>> builder)\n    {\n        // Configuraci\u00f3n de tabla\n        builder.ToTable(\"<Tabla>\");\n        \n        // Clave primaria\n        builder.HasKey(e => e.Id);\n        \n        // Propiedades\n        builder.Property(e => e.Name)\n            .HasMaxLength(100)\n            .IsRequired();\n            \n        builder.Property(e => e.CreationDate)\n            .IsRequired();\n            \n        builder.Property(e => e.EditDate)\n            .IsRequired();\n        \n        // Relaciones\n        // builder.HasMany(e => e.RelatedEntities)\n        //     .WithOne(r => r.<Entidad>)\n        //     .HasForeignKey(r => r.<Entidad>Id);\n    }\n}"
    }
  ],
  "category": "template",
  "doc": "../../docs/DDD_Core_Guide.md"
}