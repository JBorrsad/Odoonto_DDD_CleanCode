{
  "name": "DDD - Data Repository Implementation (Firebase)",
  "description": "Implementación de repositorio utilizando Firebase en la capa de Datos",
  "body": [
    "using System;",
    "using System.Collections.Generic;",
    "using System.Linq;",
    "using System.Threading.Tasks;",
    "using Google.Cloud.Firestore;",
    "using Odoonto.Data.Core.Contexts;",
    "using Odoonto.Domain.Models.${1:Entity};",
    "using Odoonto.Domain.Repositories;",
    "",
    "namespace Odoonto.Data.Repositories",
    "{",
    "    /// <summary>",
    "    /// Implementación de repositorio para ${1:Entity} usando Firebase",
    "    /// </summary>",
    "    public class ${1:Entity}Repository : I${1:Entity}Repository",
    "    {",
    "        private readonly FirestoreContext _context;",
    "        private readonly string _collectionName = \"${2:collection}\";",
    "",
    "        public ${1:Entity}Repository(FirestoreContext context)",
    "        {",
    "            _context = context ?? throw new ArgumentNullException(nameof(context));",
    "        }",
    "",
    "        public async Task<${1:Entity}> GetByIdAsync(Guid id)",
    "        {",
    "            var document = await _context.GetDocumentByIdAsync(_collectionName, id.ToString());",
    "            ",
    "            if (!document.Exists)",
    "            {",
    "                return null;",
    "            }",
    "",
    "            return ConvertToEntity(document);",
    "        }",
    "",
    "        public async Task<IEnumerable<${1:Entity}>> GetAllAsync()",
    "        {",
    "            var documents = await _context.GetAllDocumentsAsync(_collectionName);",
    "            return documents.Select(ConvertToEntity).ToList();",
    "        }",
    "",
    "        public async Task AddAsync(${1:Entity} entity)",
    "        {",
    "            var entityDict = ConvertFromEntity(entity);",
    "            await _context.SetDocumentAsync(_collectionName, entity.Id.ToString(), entityDict);",
    "        }",
    "",
    "        public async Task UpdateAsync(${1:Entity} entity)",
    "        {",
    "            var entityDict = ConvertFromEntity(entity);",
    "            await _context.SetDocumentAsync(_collectionName, entity.Id.ToString(), entityDict);",
    "        }",
    "",
    "        public async Task<bool> ExistsAsync(Guid id)",
    "        {",
    "            var document = await _context.GetDocumentByIdAsync(_collectionName, id.ToString());",
    "            return document.Exists;",
    "        }",
    "",
    "        private ${1:Entity} ConvertToEntity(DocumentSnapshot document)",
    "        {",
    "            // Implementar la conversión de documento a entidad",
    "            ${3:// TODO: Implementar la conversión específica para ${1:Entity}}",
    "            // Ejemplo:",
    "            // var data = document.ToDictionary();",
    "            // return new ${1:Entity}(",
    "            //     Guid.Parse(document.Id),",
    "            //     data.GetValueOrDefault(\"Name\")?.ToString(),",
    "            //     ...);",
    "        }",
    "",
    "        private Dictionary<string, object> ConvertFromEntity(${1:Entity} entity)",
    "        {",
    "            // Implementar la conversión de entidad a documento",
    "            ${4:// TODO: Implementar la conversión específica para ${1:Entity}}",
    "            // Ejemplo:",
    "            // return new Dictionary<string, object>",
    "            // {",
    "            //     { \"Name\", entity.Name },",
    "            //     ...",
    "            // };",
    "        }",
    "    }",
    "}"
  ]
}