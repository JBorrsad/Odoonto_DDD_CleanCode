{
  "id": "DDD-tpl-domain_entity",
  "description": "Plantilla para entidades de dominio siguiendo principios DDD",
  "placeholders": [
    {"name": "namespace", "description": "Namespace completo para la entidad"},
    {"name": "entity_name", "description": "Nombre de la entidad"},
    {"name": "entity_description", "description": "Descripción de la entidad"},
    {"name": "properties", "description": "Propiedades de la entidad", "multiline": true},
    {"name": "validation_methods", "description": "Métodos de validación", "multiline": true},
    {"name": "business_methods", "description": "Métodos de negocio", "multiline": true}
  ],
  "template": "using System;\nusing System.Collections.Generic;\nusing Odoonto.Domain.Core.Models;\nusing Odoonto.Domain.Core.Models.Exceptions;\nusing Odoonto.Domain.Models.ValueObjects;\n\nnamespace {{namespace}}\n{\n    /// <summary>\n    /// {{entity_description}}\n    /// </summary>\n    public class {{entity_name}} : Entity\n    {\n        // Propiedades con getters públicos y setters privados\n        {{properties}}\n\n        // Constructor privado - solo accesible desde método factory\n        private {{entity_name}}(Guid id) : base(id)\n        {\n            // Inicialización de colecciones y propiedades por defecto\n        }\n\n        // Método factory para crear instancias válidas\n        public static {{entity_name}} Create(Guid id)\n        {\n            if (id == Guid.Empty)\n            {\n                throw new InvalidValueException(\"El identificador no puede estar vacío.\");\n            }\n\n            var entity = new {{entity_name}}(id);\n            entity.UpdateEditDate();\n            return entity;\n        }\n\n        // Métodos de validación\n        {{validation_methods}}\n        \n        // Métodos de negocio\n        {{business_methods}}\n    }\n}",
  "filePattern": "src/Domain/Odoonto.Domain/Models/{{entity_name_plural}}/{{entity_name}}.cs"
}