{
  "id": "DDD-tpl-value_object",
  "description": "Plantilla para value objects inmutables que siguen los principios DDD",
  "placeholders": [
    {"name": "namespace", "description": "Namespace completo para el value object"},
    {"name": "value_object_name", "description": "Nombre del value object"},
    {"name": "value_object_description", "description": "Descripción del value object"},
    {"name": "properties", "description": "Propiedades del value object", "multiline": true},
    {"name": "validations", "description": "Validaciones en el constructor", "multiline": true},
    {"name": "additional_methods", "description": "Métodos adicionales específicos", "multiline": true}
  ],
  "template": "using System;\nusing Odoonto.Domain.Core.Models.Exceptions;\n\nnamespace {{namespace}}\n{\n    /// <summary>\n    /// {{value_object_description}}\n    /// </summary>\n    public class {{value_object_name}} : IEquatable<{{value_object_name}}>\n    {\n        // Propiedades públicas inmutables (solo getters)\n        {{properties}}\n\n        // Constructor que valida y establece el estado\n        public {{value_object_name}}({{constructor_parameters}})\n        {\n            // Validaciones\n            {{validations}}\n\n            // Asignación de propiedades\n            {{property_assignments}}\n        }\n\n        // Métodos adicionales específicos\n        {{additional_methods}}\n\n        // Implementación de IEquatable para comparación por valor\n        public bool Equals({{value_object_name}} other)\n        {\n            if (other is null) return false;\n            if (ReferenceEquals(this, other)) return true;\n            \n            // Comparación de todas las propiedades\n            {{equality_comparisons}}\n        }\n\n        public override bool Equals(object obj)\n        {\n            if (obj is null) return false;\n            if (ReferenceEquals(this, obj)) return true;\n            if (obj.GetType() != GetType()) return false;\n            \n            return Equals(({{value_object_name}})obj);\n        }\n\n        public override int GetHashCode()\n        {\n            // HashCode basado en todas las propiedades\n            return HashCode.Combine({{hash_code_properties}});\n        }\n\n        // Sobrecarga de operadores de igualdad\n        public static bool operator ==({{value_object_name}} left, {{value_object_name}} right)\n        {\n            if (left is null) return right is null;\n            return left.Equals(right);\n        }\n\n        public static bool operator !=({{value_object_name}} left, {{value_object_name}} right) => !(left == right);\n        \n        // ToString para representación legible\n        public override string ToString() => {{to_string_implementation}};\n    }\n}",
  "filePattern": "src/Domain/Odoonto.Domain/Models/ValueObjects/{{value_object_name}}.cs"
} 