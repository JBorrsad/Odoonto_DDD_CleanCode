{
  "name": "automapper_profile",
  "description": "Reglas para perfiles de AutoMapper",
  "patterns": [
    ".*MappingProfile\\.cs$",
    ".*/Application/.*/AutoMapper/.+\\.cs$",
    ".*Profile\\.cs$"
  ],
  "keywords": [
    "mapper",
    "automapper",
    "perfil mapeo"
  ],
  "documentation": "../global/ddd_estructura.mdc",
  "example_file": "../DDD_Ejemplos_Codigo/8_Application_AutoMapper_Profile.cs",
  "templates": [
    {
      "name": "Perfil de AutoMapper",
      "description": "Plantilla para un perfil de AutoMapper para mapear entre entidades y DTOs",
      "code": "namespace TuProyecto.Application.AutoMapper.<Modulo>;\n\nusing AutoMapper;\nusing TuProyecto.Application.DTO.<Modulo>;\nusing TuProyecto.Domain.Models.<Modulo>;\n\npublic class <Entidad>MappingProfile : Profile\n{\n    public <Entidad>MappingProfile()\n    {\n        // Mapeos de Entidad → DTO\n        CreateMap<<Entidad>, <Entidad>ReadDto>()\n            .ForMember(dest => dest.Id, opt => opt.MapFrom(src => src.Id))\n            .ForMember(dest => dest.Name, opt => opt.MapFrom(src => src.Name))\n            .ForMember(dest => dest.CreationDate, opt => opt.MapFrom(src => src.CreationDate))\n            .ForMember(dest => dest.EditDate, opt => opt.MapFrom(src => src.EditDate));\n        \n        CreateMap<<Entidad>, <Entidad>QueryDto>()\n            .ForMember(dest => dest.Id, opt => opt.MapFrom(src => src.Id))\n            .ForMember(dest => dest.Name, opt => opt.MapFrom(src => src.Name));\n        \n        // Mapeos de DTO → Entidad (generalmente no necesarios para entidades DDD,\n        // ya que usan métodos de comportamiento para modificar su estado)\n        \n        // CreateMap<<Entidad>CreateDto, <Entidad>>();\n        // CreateMap<<Entidad>UpdateDto, <Entidad>>();\n    }\n}"
    }
  ]
} 