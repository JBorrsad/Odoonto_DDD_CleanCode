{
  "name": "infrastructure_inyector",
  "description": "Reglas para inyectores de dependencias en Infrastructure Layer",
  "patterns": [
    ".*Inyector\\.cs$",
    ".*/Infraestructure/.*/Inyectors/.+\\.cs$",
    ".*ServiceCollectionExtensions\\.cs$"
  ],
  "keywords": [
    "inyector",
    "dependency injection",
    "inversión de control"
  ],
  "documentation": "../global/ddd_estructura.mdc",
  "example_file": "../DDD_Ejemplos_Codigo/10_Infrastructure_Inyector.cs",
  "templates": [
    {
      "name": "Inyector de Dependencias",
      "description": "Plantilla para un inyector de dependencias en la capa de infraestructura",
      "code": "namespace TuProyecto.Infraestructure.InversionOfControl.Inyectors;\n\nusing Microsoft.Extensions.DependencyInjection;\nusing TuProyecto.Application.Interfaces.<Modulo>;\nusing TuProyecto.Application.Services.<Modulo>;\nusing TuProyecto.Data.Repositories.<Modulo>;\nusing TuProyecto.Domain.Repositories.<Modulo>;\n\npublic static class <Nombre>Inyector\n{\n    public static void Inyect(IServiceCollection services)\n    {\n        // Repositorios\n        services.AddScoped<I<Entidad>Repository, <Entidad>Repository>();\n        \n        // Servicios de aplicación\n        services.AddScoped<I<Entidad>AppService, <Entidad>AppService>();\n        \n        // Otros servicios relacionados con esta capa/módulo\n        // services.AddScoped<IOtroServicio, OtroServicio>();\n    }\n}"
    }
  ]
} 